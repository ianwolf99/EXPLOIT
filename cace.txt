de# Step-by-Step Guide to Cache YouTube, Facebook, Xbox, WhatsApp, Android, Windows, and iPhone on Ubuntu Server using Squid

## Step 1: Update your Ubuntu server
sudo apt update
sudo apt upgrade

## Step 2: Install Squid
sudo apt install squid

## Step 3: Configure Squid
sudo nano /etc/squid/squid.conf

## Step 4: Modify Squid configuration
- Find the `http_port` directive and specify the port number on which Squid will listen:
  http_port 3128

- Locate the `cache_dir` directive and set the cache directory path and size:
  cache_dir ufs /var/spool/squid 10000 16 256

- Scroll down and find the `https_port` directive. Uncomment it and specify the SSL port number:
  https_port 3129 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

- Find the `ssl_bump` directive and add the following lines below it:
  ssl_bump server-first all
  sslproxy_cert_error allow all
  sslproxy_flags DONT_VERIFY_PEER

- Scroll further down and uncomment the `acl step1 at_step SslBump1` and `acl step2 at_step SslBump2` lines.

- Find the `sslcrtd_program` directive and uncomment it. Add the following line below it to create the SSL certificate cache directory:
  sslcrtd_program /usr/lib/squid/ssl_crtd -s /var/lib/ssl_db -M 4MB

- Scroll down to the `http_access` section and add the following lines to allow caching for specific websites. Adjust the domains and URLs as needed:
  acl youtube dstdomain .youtube.com
  cache allow youtube

  acl facebook dstdomain .facebook.com
  cache allow facebook

  acl xbox dstdomain .xbox.com
  cache allow xbox

  acl whatsapp dstdomain .whatsapp.com
  cache allow whatsapp

  acl android dstdomain .android.com
  cache allow android

  acl windows dstdomain .windows.com
  cache allow windows

  acl iphone dstdomain .iphone.com
  cache allow iphone

## Step 5: Restart Squid
sudo systemctl restart squid

## Step 6: Configure clients to use the Squid proxy
Configure client devices to use the IP address of your Ubuntu server and the port number (3128) specified in the `http_port` directive as the proxy server.

# Global settings
http_port 3128 transparent
https_port 3129 transparent cert=/etc/squid/squid-cert.pem key=/etc/squid/squid-key.pem

cache_dir ufs /var/spool/squid 10000 16 256

# ACLs
acl localnet src 192.168.0.0/16       # Adjust this to match your local network
acl blocked_sites dstdomain "/etc/squid/blocked_sites.txt"  # Create a file with blocked sites

# Access controls
http_access allow localnet
http_access deny blocked_sites

# Caching options
cache deny all
maximum_object_size 4096 MB
cache_mem 2048 MB

# Refresh patterns
refresh_pattern ^ftp:       1440    20%     10080
refresh_pattern ^gopher:    1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .       0   20%     4320

# Log settings
access_log /var/log/squid/access.log squid

# Customize error pages
error_directory /usr/share/squid/errors/en

# DNS options
dns_nameservers 8.8.8.8 8.8.4.4

# SSL Bump configuration
ssl_bump server-first all
ssl_bump none localhost
ssl_bump stare all

# ACL to bypass SSL interception for Let's Encrypt
acl letsencrypt ssl::server_name_regex -i ^(.*\.)?letsencrypt\.org$

# Additional ACLs for SSL interception bypass (customize as needed)
acl bypass_domains dstdomain .example.com
acl bypass_ips src 192.168.1.100

# Bypass SSL interception for specified domains and IPs
ssl_bump splice bypass_domains
ssl_bump splice bypass_ips
ssl_bump splice letsencrypt

# Forward all other SSL traffic for interception and caching
ssl_bump bump all


start here


# Global settings
http_port 3128 transparent
https_port 3129 transparent cert=/etc/squid/squid-cert.pem key=/etc/squid/squid-key.pem

cache_dir ufs /var/spool/squid 10000 16 256

# ACLs
acl localnet src 192.168.0.0/16       # Adjust this to match your local network
acl blocked_sites dstdomain "/etc/squid/blocked_sites.txt"  # Create a file with blocked sites

# Access controls
http_access allow localnet
http_access deny blocked_sites

# Caching options
cache_mem 2048 MB

# Refresh patterns
refresh_pattern ^ftp:       1440    20%     10080
refresh_pattern ^gopher:    1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .       0   20%     4320

# Log settings
access_log /var/log/squid/access.log squid

# Customize error pages
error_directory /usr/share/squid/errors/en

# DNS options
dns_nameservers 8.8.8.8 8.8.4.4

# SSL Bump configuration
ssl_bump server-first all
ssl_bump none localhost
ssl_bump stare all

# ACLs for caching specific websites and content categories
acl social_media dstdomain .facebook.com .twitter.com .instagram.com
acl google_content dstdomain .google.com .googleusercontent.com
acl yahoo_content dstdomain .yahoo.com
acl markets_content dstdomain .amazon.com .ebay.com
acl games dstdomain .steamcommunity.com .gog.com
acl mobile_games dstdomain .play.google.com
acl pc_games dstdomain .steampowered.com
acl playstation_games dstdomain .store.playstation.com
acl os_updates dstdomain .windowsupdate.com
acl android_os_updates dstdomain .android.com
acl linux_os_updates dstdomain .ubuntu.com
acl apple_updates dstdomain .apple.com
acl news_outlets dstdomain .cnn.com .bbc.com .nytimes.com

# Caching for specific websites and content categories
cache_peer_access localhost allow social_media
cache_peer_access localhost allow google_content
cache_peer_access localhost allow yahoo_content
cache_peer_access localhost allow markets_content
cache_peer_access localhost allow games
cache_peer_access localhost allow mobile_games
cache_peer_access localhost allow pc_games
cache_peer_access localhost allow playstation_games
cache_peer_access localhost allow os_updates
cache_peer_access localhost allow android_os_updates
cache_peer_access localhost allow linux_os_updates
cache_peer_access localhost allow apple_updates
cache_peer_access localhost allow news_outlets

# Deny caching for all other requests
cache_peer_access localhost deny all



